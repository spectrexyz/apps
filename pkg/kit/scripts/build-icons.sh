#!/usr/bin/env bash

DIR_IN=icons
DIR_OUT=src/icons
TEMPLATE=icons/svgr-template.cjs
SVGO_CONF=$(cat <<EOF
{
  "plugins": [
    "removeXMLNS",
    {
      "name": "preset-default",
      "params": {
        "overrides": {
          "removeViewBox": false
        }
      }
    }
  ]
}
EOF
)

echo "Build icon components (${DIR_IN}/*.svg to ${DIR_OUT}/*.tsx)…"

rm -rf "$DIR_OUT" && mkdir -p "$DIR_OUT"

icons=$(find "$DIR_IN" -name '*.svg')

pnpm svgr \
  --template "$TEMPLATE" \
  --typescript \
  --svgo-config "$SVGO_CONF" \
  --svg-props width="{size}" \
  --svg-props height="{size}" \
  --replace-attr-values "#000={color}" \
  --out-dir "$DIR_OUT" \
  $icons

echo "Update $DIR_OUT/index.ts exports…"

cat <<'EOF' >> "$DIR_OUT/index.ts"
// DO NOT EDIT: this file was generated by running `pnpm build:icons`.
// See pkg/kit/README.md to see the steps for adding an icon.

EOF

for icon in $icons; do
  # Fill the icons/index.ts file
  name=$(basename -s .svg $icon)
  echo "export { default as Icon${name} } from './${name}'" >> "$DIR_OUT/index.ts"

  # Disable the no-default-import ESLint rule (svgr strips comments so we can’t
  # have it in the template)
  path="${DIR_OUT}/${name}.tsx"
  printf '%s\n%s\n' "/* eslint-disable import/no-default-export */" "$(cat "$path")" >"${path}"
done

echo "Format component files…"
pnpm dprint fmt -- "${DIR_OUT}/*.{ts,tsx}"

echo "Done."
