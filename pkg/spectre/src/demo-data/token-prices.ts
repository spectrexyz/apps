import type { Dnum } from "dnum"

import * as dnum from "dnum"
import { SERC20_DECIMALS } from "../constants"

function toDnum(value: number) {
  return dnum.from(value, SERC20_DECIMALS)
}

export const tokenPrices: Record<
  "ALL" | "YEAR" | "MONTH" | "WEEK" | "DAY",
  Dnum[]
> = {
  "DAY": [
    2777.21,
    2767.86,
    2775.04,
    2761.55,
    2753.76,
    2756.82,
    2771.09,
    2769.91,
    2773.16,
    2777.89,
    2809.36,
    2821.09,
    2802.18,
    2803.3,
    2796.97,
    2808.2,
    2815.75,
    2830.83,
    2808.55,
    2822.24,
    2821.4,
    2814.67,
    2776.85,
    2781.17,
  ].map(toDnum),
  "WEEK": [
    2654.22,
    2565.91,
    2556.42,
    2591.04,
    2579.11,
    2590.75,
    2569.3,
    2584.63,
    2574.82,
    2579.13,
    2516.41,
    2567.43,
    2579.59,
    2537.22,
    2590.23,
    2550.62,
    2535.88,
    2601.14,
    2619.15,
    2629.54,
    2689.86,
    2706.02,
    2774.89,
    2761.55,
    2777.89,
    2808.2,
    2814.67,
    2781.17,
  ].map(toDnum),
  "MONTH": [
    2893.56,
    2780.08,
    2764.44,
    2622.47,
    2569,
    2637.98,
    2580.97,
    2597.42,
    2769.52,
    2780.71,
    2618.01,
    2923.08,
    2977.72,
    2948.56,
    2833.66,
    2623.07,
    2665.77,
    2550.77,
    2491.58,
    2576.72,
    2727.6,
    2608.22,
    2556.42,
    2569.3,
    2516.41,
    2590.23,
    2619.15,
    2774.89,
    2814.67,
    2781.17,
  ].map(toDnum),
  "YEAR": [
    1920,
    1964.23,
    2432.54,
    2357.21,
    2751.59,
    3529.97,
    3826.37,
    2443.91,
    2889.84,
    2706.64,
    2611.27,
    2367.73,
    1968.37,
    2276.72,
    2316.82,
    1994.11,
    1996.18,
    2300.42,
    2724.71,
    3162.61,
    3014.38,
    3228.51,
    3829.39,
    3500.34,
    3615.65,
    3078.43,
    2850.14,
    3575.85,
    3608.21,
    4161.94,
    3923.94,
    4606.07,
    4632.22,
    4289.4,
    4270.74,
    4586.95,
    4440.51,
    4021.53,
    3981.12,
    3630.59,
    3539,
    3373.64,
    3085.27,
    2465,
    2682.66,
    3246.22,
    3124.45,
    2580.97,
    2948.56,
    2727.6,
    2774.89,
    2781.17,
  ].map(toDnum),
  "ALL": [
    12.61,
    13.93,
    14.64,
    18.42,
    13.18,
    12.74,
    10.61,
    10.49,
    12.5,
    13.1,
    10.68,
    12.21,
    10.82,
    11.01,
    11.7,
    11.58,
    11.91,
    13.76,
    13.31,
    13.09,
    11.92,
    12.01,
    11.49,
    10.83,
    10.62,
    10,
    9.8,
    8.61,
    8.35,
    8.24,
    7.91,
    7.62,
    11.13,
    9.95,
    10.23,
    10.55,
    10.72,
    11.41,
    12.98,
    12.75,
    17.37,
    16.68,
    35.65,
    41.37,
    53.1,
    44.78,
    46.48,
    47.78,
    53.42,
    81.29,
    88.36,
    86.88,
    196.06,
    229.14,
    255.68,
    341.7,
    325.41,
    315.32,
    266.27,
    224.04,
    194.74,
    203.23,
    217.92,
    295.26,
    300.45,
    317.5,
    384.1,
    338.87,
    275.71,
    283.55,
    309.85,
    292,
    302,
    313.59,
    296.76,
    290.82,
    307.91,
    331.81,
    381.73,
    434.01,
    432.48,
    711.95,
    802.86,
    739.99,
    938.31,
    1247,
    1029,
    1056.99,
    1105.01,
    750.04,
    920.24,
    840.34,
    849.99,
    751.38,
    614.63,
    559.98,
    445.47,
    378.43,
    430.81,
    525.89,
    617.49,
    685.02,
    750,
    707.45,
    577.2,
    557.22,
    606.46,
    476.02,
    536,
    441.53,
    466.9,
    446.25,
    478.81,
    470.81,
    419.6,
    355.7,
    281.21,
    270.47,
    288.99,
    227.56,
    182.91,
    209.81,
    214.15,
    219.01,
    223.61,
    203.22,
    200.68,
    196.95,
    216.9,
    177.61,
    134.79,
    121.94,
    100.76,
    89.02,
    99.34,
    130.47,
    153.5,
    149.44,
    122.3,
    116.55,
    107.61,
    103.36,
    120.74,
    147,
    134.36,
    137,
    131.16,
    138.73,
    139.08,
    161.33,
    177.55,
    166.54,
    165.75,
    158.3,
    169.58,
    249,
    243.32,
    269.39,
    246.32,
    262.92,
    268.79,
    334.86,
    301.79,
    288.64,
    211.4,
    216.59,
    218.7,
    225.8,
    186.3,
    187.37,
    172.79,
    174.82,
    178.3,
    210.27,
    170,
    180.82,
    193.26,
    174.5,
    162.49,
    183.38,
    191.13,
    187.72,
    174.35,
    153,
    145.5,
    143.29,
    132.89,
    124.96,
    130.19,
    140.6,
    166.29,
    167.68,
    173.45,
    204,
    266.49,
    258.66,
    223.5,
    224.56,
    194.61,
    118.6,
    136.26,
    136.14,
    173.36,
    152.77,
    183.11,
    215.66,
    199.26,
    199.92,
    209.96,
    208.41,
    244.6,
    248.02,
    233.71,
    234.44,
    231.03,
    247.14,
    238.33,
    264.28,
    318.16,
    401.21,
    387.27,
    407.59,
    386.1,
    440.02,
    351.1,
    365.23,
    320.63,
    359.89,
    341.68,
    378.97,
    391.53,
    388.63,
    403.18,
    463.79,
    478.96,
    568.79,
    597.35,
    573.38,
    637.98,
    585.11,
    752.86,
    1212.02,
    1130.8,
    1376.88,
    1240.96,
    1668.72,
    1742.93,
    1852,
    1625.3,
    1567.86,
    1795.37,
    1824.74,
    1581.79,
    1920,
    1964.23,
    2432.54,
    2357.21,
    2751.59,
    3529.97,
    3826.37,
    2443.91,
    2889.84,
    2706.64,
    2611.27,
    2367.73,
    1968.37,
    2276.72,
    2316.82,
    1994.11,
    1996.18,
    2300.42,
    2724.71,
    3162.61,
    3014.38,
    3228.51,
    3829.39,
    3500.34,
    3615.65,
    3078.43,
    2850.14,
    3575.85,
    3608.21,
    4161.94,
    3923.94,
    4606.07,
    4632.22,
    4289.4,
    4270.74,
    4586.95,
    4440.51,
    4021.53,
    3981.12,
    3630.59,
    3539,
    3373.64,
    3085.27,
    2465,
    2682.66,
    3246.22,
    3124.45,
    2580.97,
    2948.56,
    2727.6,
    2774.89,
    2783.2,
  ].map(toDnum),
}
